call plug#begin('~/.config/nvim/bundle')
Plug 'xolox/vim-misc'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-markdown'
Plug 'godlygeek/tabular'
Plug 'majutsushi/tagbar'
Plug 'vim-scripts/LanguageTool'
Plug 'shime/vim-livedown'
Plug 'vim-scripts/loremipsum'
Plug 'ervandew/eclim'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/syntastic'
Plug 'junegunn/goyo.vim'
Plug 'sjl/vitality.vim'
Plug 'benmills/vimux'
Plug 'dylanaraps/wal.vim'
Plug 'icymind/neosolarized'
Plug 'ryanoasis/vim-devicons'
call plug#end()

" Airline
let g:airline_powerline_fonts=1
let g:airline_theme='wal'

" LanguageTool
let g:languagetool_jar='/usr/local/Cellar/languagetool/4.0/libexec/languagetool-commandline.jar'

" Syntastic
set laststatus=2
let g:syntastic_mode_map={'mode': 'passive'}
let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': [],'passive_filetypes': [] }
nnoremap <C-w>E :SyntasticCheck<CR> :SyntasticToggleMode<CR>
" Javascript
let g:syntastic_javascript_checkers=['jshint']
" Java
let g:loaded_syntastic_java_javac_checker=1
" C++
let g:syntastic_always_populate_loc_list=1
let g:syntastic_cpp_compiler='g++'
let g:syntastic_cpp_compiler_options='-std=c++11'
let g:syntastic_cpp_check_header=1
let g:syntastic_quiet_messages = {'regex': '#pragma once'}
" Rust
let g:syntastic_rust_checkers=['rustc']
let g:syntastic_rust_rustc_exe = 'cargo check'
let g:syntastic_rust_rustc_fname = ''
let g:syntastic_rust_rustc_args = '--'
map <leader>e :SyntasticCheck<cr>

" NERDTree
nnoremap <leader>n :NERDTreeToggle<cr>

" NERDCommenter
map <C-i> <PLUG>NERDCommenterInvert k<cr>

" Tabularize
map <leader>o :Tabularize<cr>

" Tagbar
"map <leader>t :TagbarToggle<cr>
"let g:tagbar_type_markdown = {
      "\ 'ctagstype': 'markdown',
      "\ 'ctagsbin' : '~/.vim/bundle/markdown2ctags/markdown2ctags.py',
      "\ 'ctagsargs' : '-f - --sort=yes',
      "\ 'kinds' : [
      "\ 's:sections',
      "\ 'i:images'
      "\ ],
      "\ 'sro' : '|',
      "\ 'kind2scope' : {
      "\ 's' : 'section',
      "\ },
      "\ 'sort': 0,
      "\ }

" Vimux
function! VimuxSlime()
  call VimuxSendText(@v)
  call VimuxSendKeys("Enter")
endfunction

nmap <C-c><C-c> "vyip :VimuxRunCommand(@v)<cr>
"nmap <C-c><leader> %yv :VimuxRunCommand(@v)<cr>
vmap <C-c> "vy :call VimuxSlime()<cr>
